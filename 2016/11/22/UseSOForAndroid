.so文件是Unix动态链接库，使用C/C++代码编写，可以直接操作系统底层代码，执行效率比较高，
也因此so库常用来处理一些计算量大、对性能要求较高的情况。
（1）能够直接操作硬件参数，如调用摄像头、音视频编解码等
（2）so库是二进制文件，不易破解，更加安全
（3）使用C/C++程序语言编写，可以直接操作内存，执行效率非常高
（4）Android中提供的很多java接口调用都是通过JNI方式来的，例如Bitmap压缩等
在Android中使用动态链接库，通常需要通过jni的方式调用。
加载so库的方式有两种，一种是以静态方式引入项目，即将so文件放在libs文件下面对应的CPU架构目录中；
一种是以动态的方式在调用时从存储卡中加载。
通过以上两种加载方式，我们可以看到，so库其实是可以脱离app独立存在的，也就是说，我们在app运行的
时候通过网络下载对应的so库放在/data/data/packageName/**中，然后在使用的时候再通过系统的
System类加载。System类提供了两种加载so库的方法：System.load("pathName");System.loadLibrary("libName").
详细可以看System源码，去进一步了解so库的加载的机制。
